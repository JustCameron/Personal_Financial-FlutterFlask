"""empty message

Revision ID: 2ff1277f7360
Revises: dc4355740c7a
Create Date: 2023-07-20 13:47:50.292151

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2ff1277f7360'
down_revision = 'dc4355740c7a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recommendation_report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('acc_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('wants', sa.Integer(), nullable=False),
    sa.Column('needs', sa.Integer(), nullable=False),
    sa.Column('savings', sa.Integer(), nullable=False),
    sa.Column('rwants', sa.Integer(), nullable=False),
    sa.Column('rneeds', sa.Integer(), nullable=False),
    sa.Column('rsavings', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['acc_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_goals')
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)

    with op.batch_alter_table('all_user_data', schema=None) as batch_op:
        batch_op.alter_column('acc_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('start_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
        batch_op.alter_column('curr_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('monthly_expense',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               nullable=False)
        batch_op.alter_column('wants_percent',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=False)
        batch_op.alter_column('needs_percent',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=False)
        batch_op.alter_column('savings_percent',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               type_=sa.Numeric(precision=5, scale=2),
               nullable=False)
        batch_op.alter_column('min_goal',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('max_goal',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('budget_increase',
               existing_type=sa.NUMERIC(precision=6, scale=2),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'account', ['acc_id'], ['id'])

    with op.batch_alter_table('expense_list', schema=None) as batch_op:
        batch_op.alter_column('acc_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('expense_list', schema=None) as batch_op:
        batch_op.alter_column('acc_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('all_user_data', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('budget_increase',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.NUMERIC(precision=6, scale=2),
               existing_nullable=True)
        batch_op.alter_column('max_goal',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.NUMERIC(precision=15, scale=2),
               existing_nullable=True)
        batch_op.alter_column('min_goal',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.NUMERIC(precision=15, scale=2),
               existing_nullable=True)
        batch_op.alter_column('savings_percent',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=sa.NUMERIC(precision=4, scale=2),
               nullable=True)
        batch_op.alter_column('needs_percent',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=True)
        batch_op.alter_column('wants_percent',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=True)
        batch_op.alter_column('monthly_expense',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               nullable=True)
        batch_op.alter_column('curr_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
        batch_op.alter_column('acc_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)

    op.create_table('user_goals',
    sa.Column('records', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('acc_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('goals', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['acc_id'], ['all_user_data.records'], name='user_goals_acc_id_fkey'),
    sa.PrimaryKeyConstraint('records', name='user_goals_pkey')
    )
    op.drop_table('recommendation_report')
    # ### end Alembic commands ###
